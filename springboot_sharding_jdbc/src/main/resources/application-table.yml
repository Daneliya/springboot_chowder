# 分库只分表配置
server:
  port: 8085
spring:
  application:
    name: springboot_sharding_jdbc
  main:
    allow-bean-definition-overriding: true
  #mybatis:
  #  mapper-locations: classpath:mybatis/mapper/*.xml
  #    type-aliases-package: com.example.entity
  shardingsphere:
    # 参数配置，显示sql
    props:
      sql:
        show: true
    # 配置数据源
    datasource:
      names: ds0,ds1
      # 数据源ds0
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/xxl-sharding-db1?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: xxl666
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/xxl-sharding-db2?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: xxl666
    # 配置默认数据源ds0
    sharding:
      # 默认数据源，主要用于写，注意一定要配置读写分离 ,注意：如果不配置，那么就会把三个节点都当做从slave节点，新增，修改和删除会出错。
      default-data-source-name: ds0
      # 配置分表的规则
      tables:
        # t_user 逻辑表名
        user:
          # 数据节点：数据源$->{0..N}.逻辑表名$->{0..N}
          actual-data-nodes: ds0.user$->{0..1}
          # 拆分库策略
          database-strategy:
            inline:
              sharding-column: db    # 分片字段（分片键）
              algorithm-expression: ds$->{db % 2} # 分片算法表达式
          # 拆分表策略
          table-strategy:
            inline:
              sharding-column: sex    # 分片字段（分片键）
              algorithm-expression: user$->{sex % 2} # 分片算法表达式
          key-generator:
            # 主键的列名
            column: id
            type: SNOWFLAKE
#      sharding:
#        tables:
#          user: #user表
#            key-generator-column-name: id  #主键
#            actual-data-nodes: ds0.user${0..1}    #数据节点,均匀分布
#            table-strategy: #分表策略
#              inline: #行表达式
#                sharding-column: sex
#                algorithm-expression: user${sex % 2}  #按模运算分配